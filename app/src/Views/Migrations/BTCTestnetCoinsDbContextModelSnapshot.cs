// <auto-generated />
using System;
using BTCTestnetCoins.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTCTestnetCoins.Migrations
{
    [DbContext(typeof(BTCTestnetCoinsDbContext))]
    partial class BTCTestnetCoinsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("BTCTestnetCoins.Models.CaptchaResponse", b =>
                {
                    b.Property<Guid?>("CaptchaResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionToResponse")
                        .HasColumnType("TEXT");

                    b.Property<double?>("CaptchaScore")
                        .HasColumnType("REAL");

                    b.Property<string>("ChallengeTimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorCodes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Success")
                        .HasColumnType("INTEGER");

                    b.HasKey("CaptchaResponseId");

                    b.ToTable("CaptchaResponses");
                });

            modelBuilder.Entity("BTCTestnetCoins.Models.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstTimeAccesed")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsEligible")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastAccesed")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfTimesAccessed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
